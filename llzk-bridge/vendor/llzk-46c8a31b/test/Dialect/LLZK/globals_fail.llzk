// RUN: llzk-opt -split-input-file -verify-diagnostics %s

// TESTS: invalid type for a global
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op attribute 'type' failed to satisfy constraint: type attribute of any LLZK type except non-constant types}}
  llzk.global @g : !llzk.tvar<@X>
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op attribute 'type' failed to satisfy constraint: type attribute of any LLZK type except non-constant types}}
  llzk.global @g : i64
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op attribute 'type' failed to satisfy constraint: type attribute of any LLZK type except non-constant types}}
  llzk.global @g : !llzk.array<@b x i1>
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op attribute 'type' failed to satisfy constraint: type attribute of any LLZK type except non-constant types}}
  llzk.global @g : !llzk.array<affine_map<(i)->(i)> x i1>
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op attribute 'type' failed to satisfy constraint: type attribute of any LLZK type except non-constant types}}
  llzk.global @g : !llzk.struct<@Component01<[affine_map<(i)->(i)>]>>
  llzk.struct @Component01<[@N]> {
    func @compute() -> !llzk.struct<@Component01<[@N]>> {
      %self = new_struct : !llzk.struct<@Component01<[@N]>>
      return %self : !llzk.struct<@Component01<[@N]>>
    }
    func @constrain(%self: !llzk.struct<@Component01<[@N]>>) { return }
  }
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op attribute 'type' failed to satisfy constraint: type attribute of any LLZK type except non-constant types}}
  llzk.global @g : !llzk.struct<@Component01<[@any_symbol_here_is_illegal]>>
  llzk.struct @Component01<[@N]> {
    func @compute() -> !llzk.struct<@Component01<[@N]>> {
      %self = new_struct : !llzk.struct<@Component01<[@N]>>
      return %self : !llzk.struct<@Component01<[@N]>>
    }
    func @constrain(%self: !llzk.struct<@Component01<[@N]>>) { return }
  }
}
// -----

// TEST: 'felt' type global initialized with unparsable attribute
module attributes {veridise.lang = "llzk"} {
  // expected-error@+2 {{custom op 'llzk.global' expected integer value}}
  // expected-error@+1 {{custom op 'llzk.global' failed to parse LLZK_FeltConstAttr parameter 'value' which is to be a `::llvm::APInt`}}
  llzk.global const @g : !llzk.felt = unparseable
}
// -----

// TEST: any other type global initialized with unparsable attribute
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{expected attribute value}}
  llzk.global const @g : index = unparseable
}
// -----

// TEST: 'felt' type global initialized with incorrect attribute kind
module attributes {veridise.lang = "llzk"} {
  // expected-error@+2 {{custom op 'llzk.global' expected integer value}}
  // expected-error@+1 {{custom op 'llzk.global' failed to parse LLZK_FeltConstAttr parameter 'value' which is to be a `::llvm::APInt`}}
  llzk.global const @g : !llzk.felt = "Hello"
}
// -----

// TESTS: any other type global initialized with incorrect attribute kind
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{integer constant out of range for attribute}}
  llzk.global const @g : i1 = 123
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{integer constant out of range for attribute}}
  llzk.global const @g : i1 = -2
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type 'i1' expected builtin.bool or builtin.integer attribute value but found builtin.array}}
  llzk.global const @g : i1 = [7,8,0]
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type 'index' expected builtin.index attribute value but found builtin.bool}}
  llzk.global const @g : index = false
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type 'index' expected builtin.index attribute value but found builtin.string}}
  llzk.global const @g : index = "hello"
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{integer literal not valid for specified type}}
  llzk.global const @g : !llzk.string = 65723456
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type '!llzk.array<2 x !llzk.string>' expected builtin.array attribute value but found builtin.string}}
  llzk.global const @g : !llzk.array<2 x !llzk.string> = "a string and something else"
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type '!llzk.array<2 x !llzk.string>' expected builtin.array attribute value to contain 2 elements but found 0}}
  llzk.global const @g : !llzk.array<2 x !llzk.string> = []
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type '!llzk.array<2 x !llzk.string>' expected builtin.string array element but found builtin.integer}}
  llzk.global const @g : !llzk.array<2 x !llzk.string> = [7, 8]
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type '!llzk.array<2 x !llzk.string>' expected builtin.array attribute value to contain 2 elements but found 3}}
  llzk.global const @g : !llzk.array<2 x !llzk.string> = ["too", "many", "strings"]
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+2 {{'llzk.global' op with type '!llzk.array<4 x !llzk.string>' expected builtin.string array element but found builtin.integer}}
  // expected-error@+1 {{'llzk.global' op with type '!llzk.array<4 x !llzk.string>' expected builtin.string array element but found builtin.affine_map}}
  llzk.global const @g : !llzk.array<4 x !llzk.string> = ["a string and something else", false, affine_map<(i)->(i)>, -100]
}
// -----
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op with type '!llzk.array<2,2,1,2 x !llzk.felt>' expected builtin.array attribute value to contain 8 elements but found 4}}
  llzk.global const @g : !llzk.array<2,2,1,2 x !llzk.felt> = [6, 12134, 45523, 15623]
}
// -----

// TEST: 'felt' type global initialized with incorrect attribute kind
module attributes {veridise.lang = "llzk"} {
  // expected-error@+2 {{custom op 'llzk.global' expected integer value}}
  // expected-error@+1 {{custom op 'llzk.global' failed to parse LLZK_FeltConstAttr parameter 'value' which is to be a `::llvm::APInt`}}
  llzk.global const @g : !llzk.felt = "Hello"
}
// -----

// TEST: global with "const" not initialized
module attributes {veridise.lang = "llzk"} {
  // expected-error@+1 {{'llzk.global' op marked as 'const' must be assigned a value}}
  llzk.global const @g : !llzk.string
}
// -----

// TEST: GlobalReadOp with unknown symbol name
module attributes {veridise.lang = "llzk"} {
  llzk.global @g : !llzk.string = "Hello"
  llzk.struct @Component02 {
    func @compute() -> !llzk.struct<@Component02> {
      // expected-error@+1 {{'llzk.readg' op references unknown symbol "@unknown"}}
      %t = llzk.readg @unknown : !llzk.string
      %self = new_struct : !llzk.struct<@Component02>
      return %self : !llzk.struct<@Component02>
    }
    func @constrain(%self: !llzk.struct<@Component02>) { return }
  }
}
// -----

// TEST: GlobalReadOp with type that does not match the GlobalDefOp
module attributes {veridise.lang = "llzk"} {
  llzk.global @g : !llzk.felt = 6546
  llzk.struct @Component03 {
    func @compute() -> !llzk.struct<@Component03> {
      // expected-error@+1 {{'llzk.readg' op has wrong type; expected '!llzk.felt', got '!llzk.string'}}
      %t = llzk.readg @g : !llzk.string
      %self = new_struct : !llzk.struct<@Component03>
      return %self : !llzk.struct<@Component03>
    }
    func @constrain(%self: !llzk.struct<@Component03>) { return }
  }
}
// -----

// TEST: GlobalWriteOp with unknown symbol name
module attributes {veridise.lang = "llzk"} {
  llzk.global @g : !llzk.felt = 125
  llzk.struct @Component04 {
    func @compute() -> !llzk.struct<@Component04> {
      %c = constfelt 99999
      // expected-error@+1 {{'llzk.writeg' op references unknown symbol "@unknown"}}
      llzk.writeg @unknown = %c : !llzk.felt
      %self = new_struct : !llzk.struct<@Component04>
      return %self : !llzk.struct<@Component04>
    }
    func @constrain(%self: !llzk.struct<@Component04>) { return }
  }
}
// -----

// TEST: GlobalWriteOp with type that does not match the GlobalDefOp
module attributes {veridise.lang = "llzk"} {
  llzk.global @g : index = 125
  llzk.struct @Component05 {
    func @compute() -> !llzk.struct<@Component05> {
      %c = constfelt 99999
      // expected-error@+1 {{'llzk.writeg' op has wrong type; expected 'index', got '!llzk.felt'}}
      llzk.writeg @g = %c : !llzk.felt
      %self = new_struct : !llzk.struct<@Component05>
      return %self : !llzk.struct<@Component05>
    }
    func @constrain(%self: !llzk.struct<@Component05>) { return }
  }
}
// -----

// TEST: GlobalWriteOp with type that does not Value
module attributes {veridise.lang = "llzk"} {
  llzk.global @g : !llzk.felt = 125
  llzk.struct @Component06 {
    func @compute() -> !llzk.struct<@Component06> {
      %c = arith.constant true // expected-note {{prior use here}}
      // expected-error@+1 {{use of value '%c' expects different type than prior uses: '!llzk.felt' vs 'i1'}}
      llzk.writeg @g = %c : !llzk.felt
      %self = new_struct : !llzk.struct<@Component06>
      return %self : !llzk.struct<@Component06>
    }
    func @constrain(%self: !llzk.struct<@Component06>) { return }
  }
}
// -----

// TEST: GlobalWriteOp targeting a "const" GlobalDefOp
module attributes {veridise.lang = "llzk"} {
  llzk.global const @t : i1 = true
  llzk.struct @Component07 {
    func @compute() -> !llzk.struct<@Component07> {
      %c = arith.constant false
      // expected-error@+1 {{'llzk.writeg' op cannot target 'llzk.global' marked as 'const'}}
      llzk.writeg @t = %c : i1
      %self = new_struct : !llzk.struct<@Component07>
      return %self : !llzk.struct<@Component07>
    }
    func @constrain(%self: !llzk.struct<@Component07>) { return }
  }
}
// -----

// TEST: Struct parameter conflicts with a global name
module attributes {veridise.lang = "llzk"} {
  llzk.global const @N : index = 3 // expected-note {{symbol already defined here}}
  // expected-error@+1 {{'llzk.struct' op parameter name "@N" conflicts with an existing symbol}}
  llzk.struct @Component08<[@N]> {
    func @compute() -> !llzk.struct<@Component08<[@N]>> {
      %self = new_struct : !llzk.struct<@Component08<[@N]>>
      return %self : !llzk.struct<@Component08<[@N]>>
    }
    func @constrain(%self: !llzk.struct<@Component08<[@N]>>) { return }
  }
}
// -----

// TEST: `writeg` cannot be used in a "constrain" function
module attributes {veridise.lang = "llzk"} {
  llzk.global @t : i1 = true
  llzk.struct @Component09 {
    func @compute() -> !llzk.struct<@Component09> {
      %self = new_struct : !llzk.struct<@Component09>
      return %self : !llzk.struct<@Component09>
    }
    func @constrain(%self: !llzk.struct<@Component09>) {
      %c = arith.constant false
      // expected-error@+1 {{'llzk.writeg' op only valid within a 'llzk.func' named "@compute" within a 'llzk.struct' definition}}
      llzk.writeg @t = %c : i1
      return
    }
  }
}
// -----

// TEST: `writeg` cannot be used in a free function
module attributes {veridise.lang = "llzk"} {
  llzk.global @g : !llzk.felt
  llzk.func @test() {
    %c = constfelt 99999
    // expected-error@+1 {{'llzk.writeg' op only valid within a 'llzk.func' named "@compute" within a 'llzk.struct' definition}}
    llzk.writeg @g = %c : !llzk.felt
    return
  }
}
