// RUN: llzk-opt -split-input-file %s 2>&1 | FileCheck --enable-var-scope %s

llzk.func private @abort()
//CHECK-LABEL:  llzk.func private @abort()
// -----

llzk.func private @scribble(!llzk.felt, !llzk.felt)
//CHECK-LABEL:  llzk.func private @scribble(!llzk.felt, !llzk.felt)
// -----

llzk.func @identity(%x: !llzk.felt) -> !llzk.felt {
  return %x: !llzk.felt
}
//CHECK-LABEL:  llzk.func @identity(%arg0: !llzk.felt) -> !llzk.felt {
//CHECK-NEXT:     return %arg0 : !llzk.felt
//CHECK-NEXT:   }
// -----

module attributes {veridise.lang = "llzk"} {
  llzk.func @split(%x: index) -> (index, index) {
    %0 = arith.constant 1 : index
    return %x, %0 : index, index
  }
  llzk.func @user(%x: index) -> (index, index) {
    %1, %2 = llzk.call @split(%x) : (index) -> (index, index)
    return %1, %2 : index, index
  }
}
//CHECK-LABEL:  llzk.func @split(%arg0: index) -> (index, index) {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = arith.constant 1 : index
//CHECK-NEXT:     return %arg0, %[[T1]] : index, index
//CHECK-NEXT:   }
//CHECK-LABEL:  llzk.func @user(%arg0: index) -> (index, index) {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]]:2 = call @split(%arg0) : (index) -> (index, index)
//CHECK-NEXT:     return %[[T1]]#0, %[[T1]]#1 : index, index
//CHECK-NEXT:   }
// -----

llzk.func private @example_arg_attr1(%x: i1 {llzk.pub}, %y: i1)
//CHECK-LABEL:  llzk.func private @example_arg_attr1(i1 {llzk.pub}, i1)
// -----

llzk.func private @example_arg_attr2(
    %a: !llzk.felt {llzk.pub},
    %b: index {llzk.pub}) {
  return
}
//CHECK-LABEL:  llzk.func private @example_arg_attr2(%arg0: !llzk.felt {llzk.pub}, %arg1: index {llzk.pub}) {
//CHECK-NEXT:     return
//CHECK-NEXT:   }
// -----
