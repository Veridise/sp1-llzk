// RUN: llzk-opt -split-input-file -emit-bytecode %s | llzk-opt - 2>&1 | FileCheck --enable-var-scope %s
// COM: This chained `llzk-opt` construction converts text -> bytecode -> text
// COM: https://veridise.atlassian.net/browse/LLZK-205

module attributes {veridise.lang = "llzk"} {
  llzk.struct @ComponentA {
    func @compute(%a: !llzk.felt) -> !llzk.struct<@ComponentA> {
      %self = new_struct : !llzk.struct<@ComponentA>
      %1 = constfelt     1 // extra spaces are intentional
      return %self : !llzk.struct<@ComponentA>
    }

    func @constrain(%self: !llzk.struct<@ComponentA>, %a: !llzk.felt) {
      return
    }
  }
}

// CHECK-LABEL: llzk.struct @ComponentA {
// CHECK-NEXT:     func @compute(%[[VAL_0:.*]]: !llzk.felt) -> !llzk.struct<@ComponentA> {
// CHECK-NEXT:       %[[VAL_1:.*]] = new_struct : <@ComponentA>
// CHECK-NEXT:       %[[VAL_2:.*]] = constfelt 1
// CHECK-NEXT:       return %[[VAL_1]] : !llzk.struct<@ComponentA>
// CHECK-NEXT:     }
// CHECK-NEXT:     func @constrain(%[[VAL_3:.*]]: !llzk.struct<@ComponentA>, %[[VAL_4:.*]]: !llzk.felt) {
// CHECK-NEXT:       return
// CHECK-NEXT:     }
// CHECK-NEXT:   }
